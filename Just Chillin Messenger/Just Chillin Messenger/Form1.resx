<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6Xzs+1uYAAAAAElFTkSuQmCC
</value>
  </data>
</root>